// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  COOKING
  DELIVERING
  COMPLETED
  CANCELLED
  REFUNDED
}

enum PaymentMethod {
  CASH
  CARD
}

enum PaymentStatus {
  PENDING
  PAID
}

// Microservices
model Orders {
  id            String        @id @default(uuid())
  userId        String        @map("user_id")
  status        OrderStatus   @default(PENDING)
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @default(now()) @map("updated_at")
  paymentMethod PaymentMethod @default(CASH) @map("payment_method")
  paymentStatus PaymentStatus @default(PENDING) @map("payment_status")

  // user       User        @relation(fields: [userId], references: [id])
  OrderItems OrderItems[] // relation to OrderItems (one-to-many)
  // Invoices   Invoices[]

  @@map("orders")
}

model OrderItems {
  id       String @id @default(uuid())
  foodId   String @map("food_id")
  orderId  String @map("order_id") // FK
  quantity Int

  Orders Orders @relation(fields: [orderId], references: [id]) // relation to Orders (one-to-many)
  // food  Food  @relation(fields: [foodId], references: [id])

  @@map("order_items")
}
